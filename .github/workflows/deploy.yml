name: Deploy to Firebase

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install root dependencies
      run: npm ci

    - name: Install Functions dependencies
      run: |
        cd functions
        npm ci

    - name: Install Client dependencies
      run: |
        cd client
        npm ci

    - name: Install Admin dependencies
      run: |
        cd admin
        npm ci

    - name: Run Functions tests
      run: |
        cd functions
        npm test

    - name: Run Client tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false

    - name: Run Admin tests
      run: |
        cd admin
        npm test -- --coverage --watchAll=false

    - name: Build Functions
      run: |
        cd functions
        npm run build

    - name: Build Client
      run: |
        cd client
        npm run build

    - name: Build Admin
      run: |
        cd admin
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: |
          functions/lib/
          client/build/
          admin/build/

  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase Staging
      run: |
        firebase use curva-mestra-staging --token ${{ secrets.FIREBASE_TOKEN }}
        firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase Production
      run: |
        firebase use curva-mestra --token ${{ secrets.FIREBASE_TOKEN }}
        firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    - name: Notify deployment success
      if: success()
      run: |
        echo "üöÄ Production deployment successful!"
        echo "Client: https://curva-mestra.web.app"
        echo "Admin: https://curva-mestra-admin.web.app"

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Production deployment failed!"
        echo "Check the logs for details."